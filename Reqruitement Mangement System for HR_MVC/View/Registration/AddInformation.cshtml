
@model RecuirementManagement.Models.Registration

@{
    Layout = null;
}


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddInformation</title>
    <link href="~/Content/css/regform.css" rel="stylesheet" />
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.15.0/font/bootstrap-icons.css" rel="stylesheet">
    <script src="~/Scripts/js/datepicker.js"></script>
    <script src="~/Scripts/js/pswdvisibility.js"></script>
    <script src="~/Scripts/js/dropdown.js"></script>
    <script src="~/Scripts/js/validation.js"></script>
    <link href="~/Content/css/logo.css" rel="stylesheet" />
</head>
<body style="background-image: url('/Images/bg2.jpg'); background-size: cover; background-repeat: no-repeat; background-attachment: fixed; background-position: center center;">
    @*<li class="nav-item">
            <a class="nav-link" href="#"><span class="glyphicon glyphicon-home"></span></a>
        </li>*@
    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-transparent">
            <div style="display: flex !important">
                <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <a class="navbar-brand" href="#">
                    <div class="logo">
                        <span class="circle">im</span>
                    </div>
                </a>
                <a class="navbar-brand" href="#" style="display: flex">
                    <h1 class="logo-text">Impact <span class="dot">.</span></h1>
                </a>

            </div>
            <div class="collapse navbar-collapse" id="navbarNav" style="flex-direction: row-reverse">
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a href="@Url.Action("Logindetails", "Login")" style="background-color: black; color: #fff; padding: 10px 20px; border-radius: 5px; text-decoration: none;">Login</a>
                    </li>
                </ul>
            </div>
        </nav>
    </header>

    <div class="container" style="background-size: cover; background-repeat: no-repeat; background-attachment: fixed; background-position: center center; display: flex; justify-content: center">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal" style="width:600px; ">
            <h2>Registration</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", id = "fname", @onblur = " validateFname()", placeholder = "Enter your First name" } })
                    <span id="fnameError" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", id = "lname", @onblur = "validateLname()", placeholder = "Enter your Last name" } })
                    <span id="lnameError" class="text-danger"></span>
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                </div>
            </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control", @id = "dob-datepicker" } })
                    @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger", @id = "dob-error-message" })
                </div>
            </div>

           
            <div class="form-group">
                @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.gender, "Female") Female
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.gender, "Male") Male
                    </label>
                    <label class="radio-inline">
                        @Html.RadioButtonFor(model => model.gender, "Others") Others
                    </label>
                    @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", id = "phone", @onblur = "validatePhone()", placeholder = "Enter Phone number" } })
                    <span id="phoneError" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", id = "email", @onblur = "validateEmail()", placeholder = "Enter Email address" } })
                    <span id="emailError" class="text-danger"></span>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.address, new { @class = "form-control", rows = 4, placeholder = "Enter Address" }) 
                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.state, (SelectList)ViewBag.States, "-Select-", new { @class = "form-control", id = "state-dropdown" })
                    @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.city, (SelectList)ViewBag.Cities, "-Select-", new { @class = "form-control", id = "city-dropdown" })
                    @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control", @id = "username", @onfocus = "generateUsername()" } })
                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <div class="input-group">
                        <input type="password" id="password" name="password" class="form-control" , placeholder="Enter password" />
                        <span class="input-group-addon" onclick="togglePasswordVisibility('password', 'passwordIcon')">
                            <i id="passwordIcon" class="glyphicon glyphicon-eye-open"></i>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger", id = "password", @onblur = "validatePassword()" })
                    <span id="passwordError" class="text-danger"></span>

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.confirmPassword, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    <div class="input-group">
                        @Html.PasswordFor(model => model.confirmPassword, new { @class = "form-control", placeholder = "Re-enter Password" })
                        <span class="input-group-addon" onclick="togglePasswordVisibility('confirmPassword', 'confirmPasswordIcon')">
                            <i id="confirmPasswordIcon" class="glyphicon glyphicon-eye-open"></i>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-6 col-md-10">
                    <center>
                        <input type="submit" id="continueButton" value=" Next " class="btn btn-primary" />
                    </center>

                </div>
            </div>
        </div>
        }
    </div>
    <footer class="fixed-bottom">
        <div class="footer">
            <p>&copy; @DateTime.Now.Year - Impact. All Rights Reserved</p>
        </div>
    </footer>
</body>
</html>
